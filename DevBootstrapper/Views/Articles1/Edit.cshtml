@using DevBootstrapper.Models.EntityModel.POCO
@model Article

@{
    ViewBag.Title = "Editing " + Html.DisplayFor(model => model.Title);
	string title = ViewBag.Title;
    string subtitle = ViewBag.Title;
    var token = (MvcHtmlString)@Html.AntiForgeryToken();
	string controller = (string)ViewBag.controller;
	string viewName = "Edit";
}



<h1 class="h2 gap-from-top-small">
	<span class="glyphicon glyphicon-edit"></span>  
	@Html.SamePageLink(title, subtitle, false)
</h1>
<hr />
@using (Html.BeginForm(viewName, controller, FormMethod.Post, new { @class = "form-horizontal Create-@ViewBag.Title", role = "form" })) 
{
   <div class="form-horizontal">
		@token
		<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="btn-group">
                    <a href="@Url.Action("Index")" title="Back" class="btn btn-info dev-btn-back"><span class="glyphicon glyphicon-chevron-left"></span> Back</a>
                    <a href="@Url.Action("Delete", new { id = Model.ArticleID })" title="Delete this record?" class="btn btn-danger" onclick="return confirm('Are you sure?')"><span class="glyphicon glyphicon-remove"></span> Delete</a>
                    <div class="input-group-btn inline">
                        <button title="Save and create new one" class="btn btn-success"><i class="glyphicon glyphicon-floppy-disk"></i> Save</button>
                    </div>                    
                </div>               
            </div>
        </div>
		@Html.Partial("_SuccessMessage")
		
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

		
		@Html.HiddenFor(model => model.ArticleID)
        @Html.EditorFor(model => model.Title)
        @Html.EditorFor(model => model.Description)
        @Html.EditorFor(model => model.Page1)
        @Html.EditorFor(model => model.Page2)
        @Html.EditorFor(model => model.Page3)
        @Html.EditorFor(model => model.Page4)
        <div class="form-group select-CategoryID-row">
			<div class="controls">
				<label class="col-md-2 control-label">@Html.DisplayNameFor(m=> m.CategoryID)<span class="red ">*</span></label>
				<div class="col-md-10">
					<div data-prop-name="CategoryID" data-select-load-dynamic="true" data-url="" data-dependable="false" data-dependable-prop="">
                        @*@Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control selectpicker", data_style = "btn-success", data_live_search = true })*@
                    </div>
					<a href="#" data-toggle="tooltip" data-original-title="Please select @Html.DisplayNameFor(m=> m.CategoryID)." title="Please select @Html.DisplayNameFor(m=> m.CategoryID)." class="tooltip-show"><span class="question-mark-for-description"></span></a>
				</div>
			</div>
		</div>
        <div class="form-group select-FeatureMediaID-row">
			<div class="controls">
				<label class="col-md-2 control-label">@Html.DisplayNameFor(m=> m.FeatureMediaID)<span class="red ">*</span></label>
				<div class="col-md-10">
					<div data-prop-name="FeatureMediaID" data-select-load-dynamic="true" data-url="" data-dependable="false" data-dependable-prop="">
                        @*@Html.DropDownList("FeatureMediaID", null, htmlAttributes: new { @class = "form-control selectpicker", data_style = "btn-success", data_live_search = true })*@
                    </div>
					<a href="#" data-toggle="tooltip" data-original-title="Please select @Html.DisplayNameFor(m=> m.FeatureMediaID)." title="Please select @Html.DisplayNameFor(m=> m.FeatureMediaID)." class="tooltip-show"><span class="question-mark-for-description"></span></a>
				</div>
			</div>
		</div>
        @Html.EditorFor(model => model.PublishDate)
        <div class="form-group select-ArticleStateID-row">
			<div class="controls">
				<label class="col-md-2 control-label">@Html.DisplayNameFor(m=> m.ArticleStateID)<span class="red ">*</span></label>
				<div class="col-md-10">
					<div data-prop-name="ArticleStateID" data-select-load-dynamic="true" data-url="" data-dependable="false" data-dependable-prop="">
                        @*@Html.DropDownList("ArticleStateID", null, htmlAttributes: new { @class = "form-control selectpicker", data_style = "btn-success", data_live_search = true })*@
                    </div>
					<a href="#" data-toggle="tooltip" data-original-title="Please select @Html.DisplayNameFor(m=> m.ArticleStateID)." title="Please select @Html.DisplayNameFor(m=> m.ArticleStateID)." class="tooltip-show"><span class="question-mark-for-description"></span></a>
				</div>
			</div>
		</div>
        @Html.EditorFor(model => model.ModifiedDate)
        <div class="form-group select-WrittenByUserID-row">
			<div class="controls">
				<label class="col-md-2 control-label">@Html.DisplayNameFor(m=> m.WrittenByUserID)<span class="red ">*</span></label>
				<div class="col-md-10">
					<div data-prop-name="WrittenByUserID" data-select-load-dynamic="true" data-url="" data-dependable="false" data-dependable-prop="">
                        @*@Html.DropDownList("WrittenByUserID", null, htmlAttributes: new { @class = "form-control selectpicker", data_style = "btn-success", data_live_search = true })*@
                    </div>
					<a href="#" data-toggle="tooltip" data-original-title="Please select @Html.DisplayNameFor(m=> m.WrittenByUserID)." title="Please select @Html.DisplayNameFor(m=> m.WrittenByUserID)." class="tooltip-show"><span class="question-mark-for-description"></span></a>
				</div>
			</div>
		</div>
        <div class="form-group select-LastModifiedByUserID-row">
			<div class="controls">
				<label class="col-md-2 control-label">@Html.DisplayNameFor(m=> m.LastModifiedByUserID)<span class="red ">*</span></label>
				<div class="col-md-10">
					<div data-prop-name="LastModifiedByUserID" data-select-load-dynamic="true" data-url="" data-dependable="false" data-dependable-prop="">
                        @*@Html.DropDownList("LastModifiedByUserID", null, htmlAttributes: new { @class = "form-control selectpicker", data_style = "btn-success", data_live_search = true })*@
                    </div>
					<a href="#" data-toggle="tooltip" data-original-title="Please select @Html.DisplayNameFor(m=> m.LastModifiedByUserID)." title="Please select @Html.DisplayNameFor(m=> m.LastModifiedByUserID)." class="tooltip-show"><span class="question-mark-for-description"></span></a>
				</div>
			</div>
		</div>
        @Html.EditorFor(model => model.MetaDescription1)
        @Html.EditorFor(model => model.MetaDescription2)
        <div class="form-group select-VerifiedByUserID-row">
			<div class="controls">
				<label class="col-md-2 control-label">@Html.DisplayNameFor(m=> m.VerifiedByUserID)<span class="red ">*</span></label>
				<div class="col-md-10">
					<div data-prop-name="VerifiedByUserID" data-select-load-dynamic="true" data-url="" data-dependable="false" data-dependable-prop="">
                        @*@Html.DropDownList("VerifiedByUserID", null, htmlAttributes: new { @class = "form-control selectpicker", data_style = "btn-success", data_live_search = true })*@
                    </div>
					<a href="#" data-toggle="tooltip" data-original-title="Please select @Html.DisplayNameFor(m=> m.VerifiedByUserID)." title="Please select @Html.DisplayNameFor(m=> m.VerifiedByUserID)." class="tooltip-show"><span class="question-mark-for-description"></span></a>
				</div>
			</div>
		</div>
        <div class="form-group select-OriginalArticleID-row">
			<div class="controls">
				<label class="col-md-2 control-label">@Html.DisplayNameFor(m=> m.OriginalArticleID)<span class="red ">*</span></label>
				<div class="col-md-10">
					<div data-prop-name="OriginalArticleID" data-select-load-dynamic="true" data-url="" data-dependable="false" data-dependable-prop="">
                        @*@Html.DropDownList("OriginalArticleID", null, htmlAttributes: new { @class = "form-control selectpicker", data_style = "btn-success", data_live_search = true })*@
                    </div>
					<a href="#" data-toggle="tooltip" data-original-title="Please select @Html.DisplayNameFor(m=> m.OriginalArticleID)." title="Please select @Html.DisplayNameFor(m=> m.OriginalArticleID)." class="tooltip-show"><span class="question-mark-for-description"></span></a>
				</div>
			</div>
		</div>
        @Html.EditorFor(model => model.TotalViewed)
        @Html.EditorFor(model => model.LastModifiedCount)
        @Html.EditorFor(model => model.ThumbsUp)
        <div class="form-group select-NextPageArticleID-row">
			<div class="controls">
				<label class="col-md-2 control-label">@Html.DisplayNameFor(m=> m.NextPageArticleID)<span class="red ">*</span></label>
				<div class="col-md-10">
					<div data-prop-name="NextPageArticleID" data-select-load-dynamic="true" data-url="" data-dependable="false" data-dependable-prop="">
                        @*@Html.DropDownList("NextPageArticleID", null, htmlAttributes: new { @class = "form-control selectpicker", data_style = "btn-success", data_live_search = true })*@
                    </div>
					<a href="#" data-toggle="tooltip" data-original-title="Please select @Html.DisplayNameFor(m=> m.NextPageArticleID)." title="Please select @Html.DisplayNameFor(m=> m.NextPageArticleID)." class="tooltip-show"><span class="question-mark-for-description"></span></a>
				</div>
			</div>
		</div>
        <div class="form-group select-LanguageID-row">
			<div class="controls">
				<label class="col-md-2 control-label">@Html.DisplayNameFor(m=> m.LanguageID)<span class="red ">*</span></label>
				<div class="col-md-10">
					<div data-prop-name="LanguageID" data-select-load-dynamic="true" data-url="" data-dependable="false" data-dependable-prop="">
                        @*@Html.DropDownList("LanguageID", null, htmlAttributes: new { @class = "form-control selectpicker", data_style = "btn-success", data_live_search = true })*@
                    </div>
					<a href="#" data-toggle="tooltip" data-original-title="Please select @Html.DisplayNameFor(m=> m.LanguageID)." title="Please select @Html.DisplayNameFor(m=> m.LanguageID)." class="tooltip-show"><span class="question-mark-for-description"></span></a>
				</div>
			</div>
		</div>
        @Html.EditorFor(model => model.IsVerified)
        @Html.EditorFor(model => model.IsProblematic)
        @Html.EditorFor(model => model.IsSendByUser)
        @Html.EditorFor(model => model.IsInDefaultLanguage)
        @Html.EditorFor(model => model.IsCommentsEnabled)
        @Html.EditorFor(model => model.IsReportedFromAnySource)
        @Html.EditorFor(model => model.IsReportActionSolved)
        @Html.EditorFor(model => model.IsAnyDraftExist)
        @Html.EditorFor(model => model.IsPreviousPageExist)
        @Html.EditorFor(model => model.IsNextPageExist)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="btn-group">
                    <a href="@Url.Action("Index")" title="Back" class="btn btn-info dev-btn-back"><span class="glyphicon glyphicon-chevron-left"></span> Back</a>
                    <a href="@Url.Action("Delete", new { id = Model.ArticleID })" title="Delete this record?" class="btn btn-danger" onclick="return confirm('Are you sure?')"><span class="glyphicon glyphicon-remove"></span> Delete</a>
                    <div class="input-group-btn inline">
                        <button title="Save and create new one" class="btn btn-success"><i class="glyphicon glyphicon-floppy-disk"></i> Save</button>
                    </div>                    
                </div>               
            </div>
        </div>
    </div>
}

@Html.Partial("_ValidatorCommonForm", new ViewDataDictionary { 
    {"token",token}
})
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
