@model object

    @{
        var isRequired = ViewData.ModelMetadata.IsRequired;
        var isRequiredStar = isRequired ? "*" : "";
        var htmlAttributes = new RouteValueDictionary();
        if (@ViewData.ModelMetadata.DisplayName == null) {
            ViewData.ModelMetadata.DisplayName = ViewData.ModelMetadata.PropertyName;
        }
        if (ViewBag.@class != null) {
            htmlAttributes.Add("class", "form-control " + ViewBag.@class);
        } else {
            htmlAttributes.Add("class", "form-control");
        }
        if (ViewBag.placeholder != null) {
            htmlAttributes.Add("placeholder", ViewBag.placeholder);
        } else {
            if (isRequired) {
                htmlAttributes.Add("placeholder", @ViewData.ModelMetadata.DisplayName + isRequiredStar);
            } else {
                htmlAttributes.Add("placeholder", "[" + @ViewData.ModelMetadata.DisplayName + "]");
            }
        }
        if (ViewBag.Value != null) {
            htmlAttributes.Add("Value", ViewBag.Value);
        }

        if (ViewBag.LiveSearch == null) {
            ViewBag.LiveSearch = true;
        }

        if (ViewBag.Style == null) {
            ViewBag.Style = "btn-success";
        }
        //ViewBag.SelectData = SelectList

        var selectListData = (IEnumerable<SelectListItem>)ViewBag.SelectData;

    }
    <div class="form-group form-row-@ViewData.ModelMetadata.PropertyName">
        <div class="controls">
            <label class="col-md-2 control-label" for="@ViewData.ModelMetadata.PropertyName">
                @ViewData.ModelMetadata.DisplayName
                <span class="red">@isRequiredStar</span>
            </label>
            <div class="col-md-10 select-holding-div">
                
                @Html.DropDownList(ViewData.ModelMetadata.PropertyName,
                                   selectListData,
                                   htmlAttributes: new {
                                       @class = "form-control selectpicker",
                                       data_style = @ViewBag.Style,
                                       data_live_search = @ViewBag.LiveSearch
                                   })
                @if (@ViewData.ModelMetadata.Description != null) {
                    <a data-toggle="tooltip" data-original-title="@ViewData.ModelMetadata.Description" title="@ViewData.ModelMetadata.Description" class="tooltip-show"><span class="question-mark-for-description"></span></a>
                }
                <a data-toggle="tooltip" title="Validating" data-original-title="Validating" class="tooltip-show CustomValidation @ViewData.ModelMetadata.PropertyName no-hover">
                    <span data-display="@ViewData.ModelMetadata.DisplayName" class="CustomValidation @ViewData.ModelMetadata.PropertyName glyphicon glyphicon-refresh glyphicon-refresh-animate hide" title="Validating"></span>
                </a>
            </div>
        </div>
    </div>
