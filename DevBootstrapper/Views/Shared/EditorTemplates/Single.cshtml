@model float?

@{
    var isRequired = ViewData.ModelMetadata.IsRequired;
    string isRequiredStar = isRequired ? "*" : "",
        prop = ViewData.ModelMetadata.PropertyName.ToString(),
        propLower = prop.ToLower(),
        styleProperty = propLower,
        displayName = ViewData.ModelMetadata.DisplayName ?? ViewData.ModelMetadata.PropertyName,
        description = ViewData.ModelMetadata.Description;
    var htmlAttributes = new RouteValueDictionary();
    if (displayName == null) {
        ViewData.ModelMetadata.DisplayName = ViewData.ModelMetadata.PropertyName;
    }
    if (ViewBag.@class != null) {
        htmlAttributes.Add("class", "form-control " + ViewBag.@class);
    } else {
        htmlAttributes.Add("class", "form-control");
    }

    if (ViewBag.@type != null) {
        htmlAttributes.Add("type", ViewBag.@type);
    } else {
        htmlAttributes.Add("type", "number");

    }

    if (ViewBag.placeholder != null) {
        htmlAttributes.Add("placeholder", ViewBag.placeholder);
    } else {
        htmlAttributes.Add("placeholder", displayName + isRequiredStar);
    }

    htmlAttributes.Add("title", htmlAttributes["placeholder"]);
}

<div class="form-group form-row @styleProperty"  data-prop="@styleProperty">
    <div class="controls dev-plugin plugin-container string">
        <label class="col-md-2 control-label" for="@ViewData.ModelMetadata.PropertyName">@displayName<span class="red">@isRequiredStar</span></label>
        <div class="col-md-10 form-input-@ViewData.ModelMetadata.PropertyName">
            @Html.TextBox("", ViewData.TemplateInfo.FormattedModelValue, htmlAttributes)
            @if (description != null) {
                <a data-toggle="tooltip" data-original-title="@description" title="@description" class="tooltip-show"><span class="description-icon"></span></a>
            }
            <a data-toggle="tooltip" title="Validating" data-original-title="Validating" class="tooltip-show @styleProperty no-hover">
                <span data-display="@displayName" class="@ViewData.ModelMetadata.PropertyName glyphicon glyphicon-refresh glyphicon-refresh-animate hide" title="Validating"></span>
            </a>
            @Html.ValidationMessageFor(m => m, null, new { @class = "rounded-3 label label-danger fixed-width-294 validation-box" })
        </div>
    </div>
</div>

