@model DevBootstrapper.Models.EntityModel.POCO.Employee

@{
    ViewBag.Title           = "Creating Employee";
	string title            = ViewBag.Title;
    string subtitle         = ViewBag.Title;
	var token               = (MvcHtmlString)@Html.AntiForgeryToken();
	string controller       = (string)ViewBag.controller;
	const string viewName   = "Create";
    bool dropDownDynamic    = (bool)ViewBag.dropDownDynamic;

}


<h1 class="h2 gap-from-top-small">
	<span class="glyphicon glyphicon-plus-sign"></span>  
	@Html.SamePageLink(title, subtitle, false)
</h1>
<hr />
@using (Html.BeginForm(viewName, controller, FormMethod.Post, new { @class = "form-horizontal Create-@ViewBag.Title", role = "form" })) 
{
   <div class="form-horizontal">
		@token
		<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="btn-group">
                    <a href="@Url.Action("Index")" title="Back" class="btn btn-info dev-btn-back"><span class="glyphicon glyphicon-chevron-left"></span> Back</a>
                    <div class="input-group-btn inline">
                        <button class="btn btn-success" title="Save and create a new one."><i class="glyphicon glyphicon-plus"></i> Create</button>
                    </div>                    
                </div>               
            </div>
        </div>
		@Html.Partial("_SuccessMessage")

		
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.EditorFor(model => model.LastName)
        @Html.EditorFor(model => model.FirstName)
        @Html.EditorFor(model => model.Title)
        @Html.EditorFor(model => model.TitleOfCourtesy)
        @Html.EditorFor(model => model.BirthDate)
        @Html.EditorFor(model => model.HireDate)
        @Html.EditorFor(model => model.Address)
        @Html.EditorFor(model => model.City)
        @Html.EditorFor(model => model.Region)
        @Html.EditorFor(model => model.PostalCode)
        @Html.EditorFor(model => model.Country)
        @Html.EditorFor(model => model.HomePhone)
        @Html.EditorFor(model => model.Extension)
        @Html.EditorFor(model => model.Photo)
        @Html.EditorFor(model => model.Notes)
        <!-- DropDown -->
		if(dropDownDynamic){
            @Html.EditorFor(model => model.ReportsTo, "DropDownDynamic")
        } else {
            @Html.EditorFor(model => model.ReportsTo, "DropDown", new {@SelectData = ViewBag.ReportsTo})            
        }
        @Html.EditorFor(model => model.PhotoPath)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="btn-group">
                    <a href="@Url.Action("Index")" title="Back" class="btn btn-info dev-btn-back"><span class="glyphicon glyphicon-chevron-left"></span> Back</a>
                    <div class="input-group-btn inline">
                        <button class="btn btn-success" title="Save and create a new one."><i class="glyphicon glyphicon-plus"></i> Create</button>
                    </div>                    
                </div>               
            </div>
        </div>
    </div>
}
@Html.Partial("_ValidatorCommonForm", new ViewDataDictionary { 
    {"token",token}
})
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

