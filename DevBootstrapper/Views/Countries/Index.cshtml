@model IEnumerable<Country>

@{
    ViewBag.Title = "Country";
    string title = ViewBag.Title;
    string subtitle = ViewBag.Title;
    var controller = (string) ViewBag.controller;
    var viewName = "Index";
    var editLinkName = "";
    /*
	bool noItemsExist = Model == null;
	if (!noItemsExist) {
		noItemsExist = Model.Count() == 0;
	}
	*/
}

<h2 class="h3 gap-from-top-small">
    <span class="glyphicon glyphicon-th-list"></span> 
    @Html.SamePageLink(title, subtitle, false)
</h2>
<div class="small-bottom-gap"></div>

<p class="create-btn-p">
    <a href="@Url.Action("Create")" title="Create a new item." class="btn btn-warning create-save"><span class="glyphicon glyphicon-plus"></span> Create</a>
</p>
<table class="table table-hover bootstrap-table-do" data-toggle="table" data-toolbar="#filter-bar" data-show-filter="true" data-show-columns="true" data-search="true" data-show-refresh="true" data-show-toggle="true" data-show-export="true" data-pagination="true">
    <!--<caption>@viewName</caption>-->
    <thead>
    <tr>
        <th data-field="CountryName">
            @Html.DisplayNameFor(model => model.CountryName)
        </th>
        <th data-field="Capital">
            @Html.DisplayNameFor(model => model.Capital)
        </th>
        <th data-field="Alpha2Code">
            @Html.DisplayNameFor(model => model.Alpha2Code)
        </th>
        <th data-field="Alpha3Code">
            @Html.DisplayNameFor(model => model.Alpha3Code)
        </th>
        <th data-field="CallingCode">
            @Html.DisplayNameFor(model => model.CallingCode)
        </th>
        <th data-field="NationalityName">
            @Html.DisplayNameFor(model => model.NationalityName)
        </th>
        <th data-field="Region">
            @Html.DisplayNameFor(model => model.Region)
        </th>
        <th data-field="SubRegion">
            @Html.DisplayNameFor(model => model.SubRegion)
        </th>
        <th data-field="Population">
            @Html.DisplayNameFor(model => model.Population)
        </th>
        <th data-field="Area">
            @Html.DisplayNameFor(model => model.Area)
        </th>
        <th data-field="Culture">
            @Html.DisplayNameFor(model => model.Culture)
        </th>
        <th data-field="GiniCoefficient">
            @Html.DisplayNameFor(model => model.GiniCoefficient)
        </th>
        <th data-field="Relevance">
            @Html.DisplayNameFor(model => model.Relevance)
        </th>
        <th data-field="LatitudeStartingPoint">
            @Html.DisplayNameFor(model => model.LatitudeStartingPoint)
        </th>
        <th data-field="LatitudeEndingPoint">
            @Html.DisplayNameFor(model => model.LatitudeEndingPoint)
        </th>
        <th data-field="RelatedTimeZoneID">
            @Html.DisplayNameFor(model => model.RelatedTimeZoneID)
        </th>
        <th data-field="IsSingleTimeZone">
            @Html.DisplayNameFor(model => model.IsSingleTimeZone)
        </th>
        <th data-field="DisplayCountryName">
            @Html.DisplayNameFor(model => model.DisplayCountryName)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>

            <td>
                @{ editLinkName = Html.DisplayFor(model => item.CountryName).ToString(); }
                <a href="@Url.Action("Edit", new {id = item.CountryID})" title="@editLinkName edit...">
                    <span class="glyphicon glyphicon-pencil"></span> @editLinkName</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Capital)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Alpha2Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Alpha3Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CallingCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NationalityName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Region)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubRegion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Population)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Area)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Culture)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GiniCoefficient)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Relevance)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LatitudeStartingPoint)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LatitudeEndingPoint)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RelatedTimeZoneID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsSingleTimeZone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DisplayCountryName)
            </td>
            <td>
                <a href="@Url.Action("AddItems", new {id = item.CountryID})" title="Add underlying items of @editLinkName." class="btn btn-success btn-xs"><span class="glyphicon glyphicon-chevron-down"></span> Add Items</a>
                <a href="@Url.Action("Details", new {id = item.CountryID})" title="Details of @editLinkName." class="btn btn-warning btn-xs"><span class="glyphicon glyphicon-print"></span> Details</a>
                <a href="@Url.Action("Delete", new {id = item.CountryID})" title="Delete @editLinkName" class="btn btn-danger btn-xs" onclick=" return confirm('Are you sure?') "><span class="glyphicon glyphicon-remove"></span> Delete</a>
            </td>
        </tr>
    }
    </tbody>

</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}